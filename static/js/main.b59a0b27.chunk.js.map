{"version":3,"sources":["components/Content/About.jsx","components/Content/Projects.jsx","components/Navbar/Navbar.jsx","App.js","serviceWorker.js","index.js"],"names":["About","className","id","src","alt","React","Component","Navbar","to","title","href","path","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+RAEqBA,E,4JACjB,WACI,OAAQ,yBAAKC,UAAU,UAAUC,GAAG,SAC5B,6BAASD,UAAU,SACf,4BAAQA,UAAU,yBACd,uBAAGA,UAAU,SACT,yBAAKE,IAAI,qGAAqGC,IAAI,0BAG1H,yBAAKH,UAAU,iBACX,yBAAKA,UAAU,WACX,wBAAIA,UAAU,cAAd,YACA,gwB,GAZOI,IAAMC,WCApBN,E,4JACjB,WACI,OACI,yBAAKC,UAAU,UAAUC,GAAG,iB,GAHLG,IAAMC,WCIpBC,E,4JACjB,WACI,OACI,kBAAC,IAAD,KACI,yBAAKN,UAAU,UACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,eAAc,kBAAC,IAAD,CAAMO,GAAG,UAAT,aAC7B,yBAAKP,UAAU,eAAc,kBAAC,IAAD,CAAMO,GAAG,aAAT,aAC7B,yBAAKP,UAAU,cACX,yBAAKA,UAAU,cAAcQ,MAAM,WAAU,uBAAGC,KAAK,+BAA8B,kBAAC,IAAD,QACnF,yBAAKT,UAAU,cAAcQ,MAAM,YAAW,uBAAGC,KAAK,0DAAyD,kBAAC,IAAD,QAC/G,yBAAKT,UAAU,cAAcQ,MAAM,UAAS,uBAAGC,KAAK,iCAAgC,kBAAC,IAAD,QACpF,yBAAKT,UAAU,cAAcQ,MAAM,iBAAgB,uBAAGC,KAAK,oEAAmE,kBAAC,IAAD,QAC9H,yBAAKT,UAAU,cAAcQ,MAAM,WAAU,uBAAGC,KAAK,4BAA2B,kBAAC,IAAD,QAChF,yBAAKT,UAAU,cAAcQ,MAAM,iBAAgB,uBAAGC,KAAK,uDAAsD,kBAAC,IAAD,WAI7H,yBAAKT,UAAU,aACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOU,KAAK,UACR,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,aACR,kBAAC,EAAD,c,GAzBQN,IAAMC,W,MCM3BM,MARf,WACE,OACE,yBAAKX,UAAU,OACb,kBAAC,EAAD,QCKcY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.b59a0b27.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class About extends React.Component {\n    render() {\n        return (<div className=\"section\" id=\"about\">\n                <article className=\"media\">\n                    <figure className=\"media-left is-128x128\">\n                        <p className=\"image\">\n                            <img src=\"https://res.cloudinary.com/lmdp3yf15/image/upload/c_scale,w_250/v1614855834/ChrisGrey_2_v07p6c.png\" alt=\"Chris Trott Profile\" />\n                        </p>\n                    </figure>\n                    <div className=\"media-content\">\n                        <div className=\"content\">\n                            <h3 className=\"title is-3\">About Me</h3>\n                            <p>\n                                Hi, I'm  Chris Trott. I'm a web developer with experience as a Front End and Full Stack Developer, specifically working with Web Apps.\n                                I mostly work with JavaScript and C#, and my most recent experience has been a mix of React and Node.js.\n                                I have targetted experience with Product-based companies that solve problems within a specific domain.\n                                I build software with precision and integrity, and pride myself on my attention to detail.\n                                In my spare time, I try out new technology and build small games in Unity, Unreal Engine, or HTML Canvas.\n                                I live with my wife and 4 kids in Melbourne, Victoria.\n                                When I'm not experimenting and creating with tech, I'm out enjoying time with the family and soaking up the awesome Melbourne culture.\n                            </p>\n                        </div>\n                    </div>\n                </article>\n            </div>);\n    }\n}","import React from 'react';\n\nexport default class About extends React.Component {\n    render() {\n        return (\n            <div className=\"section\" id=\"projects\">\n                \n\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Link, Route, BrowserRouter as Router, Switch } from 'react-router-dom';\nimport { FaGithub, FaItchIo, FaLinkedin, FaStackExchange, FaTwitter, FaUnity } from 'react-icons/fa';\nimport About from '../Content/About';\nimport Projects from '../Content/Projects';\n\nexport default class Navbar extends React.Component {\n    render() {\n        return (\n            <Router>\n                <div className=\"navbar\">\n                    <div className=\"container\">\n                        <div className=\"navbar-brand\"></div>\n                        <div className=\"navbar-item\"><Link to=\"/about\">About Me</Link></div>\n                        <div className=\"navbar-item\"><Link to=\"/projects\">Projects</Link></div>\n                        <div className=\"navbar-end\">\n                            <div className=\"navbar-item\" title=\"Twitter\"><a href=\"https://twitter.com/viokyma\"><FaTwitter /></a></div>\n                            <div className=\"navbar-item\" title=\"LinkedIn\"><a href=\"https://www.linkedin.com/in/christopher-trott-39345119\"><FaLinkedin /></a></div>\n                            <div className=\"navbar-item\" title=\"GitHub\"><a href=\"https://github.com/ChrisTrott\"><FaGithub /></a></div>\n                            <div className=\"navbar-item\" title=\"StackExchange\"><a href=\"https://stackexchange.com/users/2116967/chris-trott?tab=accounts\"><FaStackExchange /></a></div>\n                            <div className=\"navbar-item\" title=\"Itch.io\"><a href=\"https://viokyma.itch.io/\"><FaItchIo /></a></div>\n                            <div className=\"navbar-item\" title=\"Unity Answers\"><a href=\"https://answers.unity.com/users/152903/viokyma.html\"><FaUnity /></a></div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"container\">\n                    <Switch>\n                        <Route path=\"/about\">\n                            <About />\n                        </Route>\n                        <Route path=\"/projects\">\n                            <Projects />\n                        </Route>\n                    </Switch>\n                </div>\n            </Router>\n        );\n    }\n}","import React from 'react';\nimport Navbar from './components/Navbar/Navbar.jsx'; \nimport './App.sass';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}